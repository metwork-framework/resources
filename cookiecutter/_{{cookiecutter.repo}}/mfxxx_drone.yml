# automatically generated from https://github.com/metwork-framework/resources/blob/master/cookiecutter/_%7B%7Bcookiecutter.repo%7D%7D/mfxxx_drone.yml template

{% set PUB_ROOT = "/pub/metwork" %}
{% if "mfext-addon" in "REPO_TOPICS"|getenv|from_json %}
    {% set MFEXT_ADDON = "1" %}
    {% set FORCED_REPO = "mfext" %}
{% else %}
    {% set MFEXT_ADDON = "0" %}
    {% set FORCED_REPO = cookiecutter.repo %}
{% endif %}

{% if cookiecutter.repo == "mfcom" %}
    {% set DEP_MODULE = "mfext" %}
    {% set BUILD_IMAGE_NAME = "mfcom-${OS_VERSION}-buildimage" %}
{% elif cookiecutter.repo == "mfext" %}
    {% set DEP_MODULE = "" %}
    {% set BUILD_IMAGE_NAME = "mfext-${OS_VERSION}-buildimage" %}
{% else %}
    {% if MFEXT_ADDON == "1" %}
        {% set DEP_MODULE = "" %}
        {% set BUILD_IMAGE_NAME = "mfcom-${OS_VERSION}-buildimage" %}
    {% else %}
        {% set DEP_MODULE = "mfcom" %}
        {% set BUILD_IMAGE_NAME = "mfxxx-${OS_VERSION}-buildimage" %}
    {% endif %}
{% endif %}

bootstrap_common: &bootstrap_common
  commands:
    - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "${OS_VERSION}"; then echo "step bypass"; exit 0; fi; fi
    - mkdir -p /opt/metwork-{{FORCED_REPO}}-$${TARGET_DIR}
{% if cookiecutter.repo == "mfext" or MFEXT_ADDON == "1" %}
    - ./bootstrap.sh /opt/metwork-{{FORCED_REPO}}-$${TARGET_DIR}
{% else %}
    - ./bootstrap.sh /opt/metwork-{{FORCED_REPO}}-$${TARGET_DIR} /opt/metwork-{{DEP_MODULE}}-$${DEP_DIR}
{% endif %}
    - cat adm/root.mk
{% if cookiecutter.repo == "mfext" %}
    - CACHE_HASH=`./adm2/_build_cache_hash.sh .`
{% else %}
    - CACHE_HASH=`/opt/metwork-mfext/bin/_build_cache_hash.sh .`
{% endif %}
    - if ! test -f /buildcache/build_{{cookiecutter.repo}}_${DRONE_BRANCH}_$${CACHE_HASH}; then echo $${CACHE_HASH} >.drone_cache; fi

build_common: &build_common
  commands:
    - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "${OS_VERSION}"; then echo "step bypass"; exit 0; fi; fi
    - if test "${DRONE_TAG}" = ""; then if ! test -f .drone_cache; then echo "step bypass"; exit 0; fi; fi
    - export METWORK_BUILD_OS=${OS_VERSION}
{% if cookiecutter.repo == "mfext" %}
    - mkdir -p /opt/metwork-mfext-$${TARGET_DIR}
    - mkdir -p /pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}
    - make >/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - make doc >>/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - rm -Rf html_doc
    - cp -Rf /opt/metwork-mfext-$${TARGET_DIR}/html_doc .
    - make test >>/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - make RELEASE_BUILD=${DRONE_BUILD_NUMBER} rpm >>/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfext/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - mv /opt/metwork-mfext-$${TARGET_DIR}/*.rpm .
  volumes:
    - /pub:/pub
    - /private:/private
    - /buildcache:/buildcache
{% else %}
    - mkdir -p /opt/metwork-{{FORCED_REPO}}-$${TARGET_DIR}
{%- if cookiecutter.repo == "mfextaddon_scientific" %}
    - mkdir -p /pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfextaddon_scientific/${OS_VERSION}/${DRONE_BUILD_NUMBER}
    - make >/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfextaddon_scientific/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - make test >>/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfextaddon_scientific/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - make RELEASE_BUILD=${DRONE_BUILD_NUMBER} rpm >>/pub/metwork/continuous_integration/buildlogs/${DRONE_BRANCH}/mfextaddon_scientific/${OS_VERSION}/${DRONE_BUILD_NUMBER}/make.log 2>&1
    - mv /opt/metwork-{{FORCED_REPO}}-$${TARGET_DIR}/*.rpm .
  volumes:
    - /pub:/pub
    - /private:/private
    - /buildcache:/buildcache
{%- else %}
{%- if cookiecutter.repo == "mfextaddon_python3_ia" %}
    - yum -y install metwork-mfext-layer-python3_scientific
{%- endif %}
    - make
{% if MFEXT_ADDON == "0" %}
    - make doc
    - rm -Rf html_doc
    - cp -Rf /opt/metwork-{{FORCED_REPO}}-$${TARGET_DIR}/html_doc .
{% endif %}
    - make test
    - make RELEASE_BUILD=${DRONE_BUILD_NUMBER} rpm
    - mv /opt/metwork-{{FORCED_REPO}}-$${TARGET_DIR}/*.rpm .
{%- endif %}
{% endif %}

publish_ci_common: &publish_ci_common
  commands:
    - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "${OS_VERSION}"; then echo "step bypass"; exit 0; fi; fi
    - if test "${DRONE_TAG}" = ""; then if ! test -f .drone_cache; then echo "step bypass"; touch .drone_downstream_bypass; exit 0; fi; fi
    - mkdir -p {{PUB_ROOT}}/continuous_integration/rpms/${DRONE_BRANCH}/${OS_VERSION}/
    - cp *.rpm {{PUB_ROOT}}/continuous_integration/rpms/${DRONE_BRANCH}/${OS_VERSION}/
    - createrepo --update {{PUB_ROOT}}/continuous_integration/rpms/${DRONE_BRANCH}/${OS_VERSION}
{% if MFEXT_ADDON == "0" %}
    - if test "${OS_VERSION}" = "centos6"; then rm -Rf {{PUB_ROOT}}/continuous_integration/docs/${DRONE_BRANCH}/{{cookiecutter.repo}}; mkdir -p {{PUB_ROOT}}/continuous_integration/docs/${DRONE_BRANCH}/{{cookiecutter.repo}} ; cp -Rf html_doc/* {{PUB_ROOT}}/continuous_integration/docs/${DRONE_BRANCH}/{{cookiecutter.repo}}/ ; fi
{% endif %}
    - touch /buildcache/build_{{cookiecutter.repo}}_${DRONE_BRANCH}_`cat .drone_cache`
  volumes:
    - /pub:/pub
    - /private:/private
    - /buildcache:/buildcache

{% if cookiecutter.repo != "mfcom" %}
integration_tests_common: &integration_tests_common
  commands:
    - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "${OS_VERSION}"; then echo "step bypass"; exit 0; fi; fi
    - if test "${DRONE_TAG}" = ""; then if ! test -f .drone_cache; then echo "step bypass"; exit 0; fi; fi
{% if cookiecutter.repo == "mfext" %}
    - yum -y localinstall metwork-mfext*.rpm
    - /opt/metwork-mfext/bin/mfext_wrapper ./run_integration_tests.sh
{% else %}
    - echo -e "[metwork_$${DEP_BRANCH}]" >/etc/yum.repos.d/metwork.repo
    - echo -e "name=Metwork Continuous Integration Branch $${DEP_BRANCH}" >> /etc/yum.repos.d/metwork.repo
    - echo -e "baseurl=http://metwork-framework.org/pub/metwork/continuous_integration/rpms/$${DEP_BRANCH}/${OS_VERSION}/" >> /etc/yum.repos.d/metwork.repo
    - echo -e "gpgcheck=0\n\enabled=1\n\metadata_expire=0\n" >>/etc/yum.repos.d/metwork.repo
{%- if MFEXT_ADDON == "1" %}
    - yum -y localinstall metwork-mfext*.rpm
    - yum -y install metwork-mfext-minimal
    - /opt/metwork-mfext/bin/mfext_wrapper ./run_integration_tests.sh
{%- else %}
    - yum -y localinstall metwork-{{cookiecutter.repo}}*.rpm
    - su --command="{{cookiecutter.repo}}.init" - {{cookiecutter.repo}}
    - su --command="{{cookiecutter.repo}}.start" - {{cookiecutter.repo}}
    - su --command="{{cookiecutter.repo}}.status" - {{cookiecutter.repo}}
    - if test -d "integration_tests"; then chown -R {{cookiecutter.repo}} integration_tests; fi
    - su --command="cd `pwd`; ./run_integration_tests.sh" - {{cookiecutter.repo}}
    - su --command="{{cookiecutter.repo}}.stop" - {{cookiecutter.repo}}
{%- endif %}
{% endif %}
{% endif %}

pipeline:
  bootstrap_integration_push:
    image: metwork/{{BUILD_IMAGE_NAME}}:integration
    environment:
      - DEP_DIR=master
      - TARGET_DIR=master
    <<: *bootstrap_common
    volumes:
      - /buildcache:/buildcache
    when:
      event: push
      branch: [ integration, ci_*, pci_* ]
{% if cookiecutter.repo != "mfext" %}
  bootstrap_integration_pr:
    image: metwork/{{BUILD_IMAGE_NAME}}:integration
    environment:
      - TARGET_DIR=master
      - DEP_DIR=master
    <<: *bootstrap_common
    when:
      event: pull_request
      branch: integration
  bootstrap_integration_pr_release:
    image: metwork/{{BUILD_IMAGE_NAME}}:${DRONE_BRANCH}
    environment:
      - TARGET_DIR=${DRONE_BRANCH##release_}
      - DEP_DIR=${DRONE_BRANCH##release_}
    <<: *bootstrap_common
    when:
      event: pull_request
      branch: [ release_* ]
{% endif %}
  bootstrap:
    image: metwork/{{BUILD_IMAGE_NAME}}:${DRONE_BRANCH}
    environment:
      - DEP_DIR=${DRONE_BRANCH##release_}
      - TARGET_DIR=${DRONE_BRANCH##release_}
    <<: *bootstrap_common
    volumes:
      - /buildcache:/buildcache
    when:
      event: push
      branch: [ master, experimental*, release_* ]
  bootstrap_tag:
    image: metwork/{{BUILD_IMAGE_NAME}}:${DRONE_BRANCH}
    environment:
      - DEP_DIR=${DRONE_BRANCH##release_}
      - TARGET_DIR=${DRONE_BRANCH##release_}
    <<: *bootstrap_common
    volumes:
      - /buildcache:/buildcache
    when:
      event: tag
      ref: refs/tags/v*

  build_integration:
    <<: *build_common
    image: metwork/{{BUILD_IMAGE_NAME}}:integration
    environment:
      - TARGET_DIR=master
      - DEP_BRANCH=integration
    when:
{% if cookiecutter.repo == "mfext" %}
      event: push
{% else %}
      event: [push, pull_request]
{% endif %}
      branch: [ integration, ci_*, pci_* ]
  build:
    <<: *build_common
    image: metwork/{{BUILD_IMAGE_NAME}}:${DRONE_BRANCH}
    environment:
      - TARGET_DIR=${DRONE_BRANCH##release_}
      - DEP_BRANCH=${DRONE_BRANCH}
    when:
{% if cookiecutter.repo == "mfext" or cookiecutter.repo == "mfextaddon_scientific" %}
      event: push
{% else %}
      event: [ push, pull_request ]
{% endif %}
      branch: [ master, experimental*, release_* ]
  build_tag:
    <<: *build_common
    image: metwork/{{BUILD_IMAGE_NAME}}:${DRONE_BRANCH}
    environment:
      - TARGET_DIR=${DRONE_BRANCH##release_}
      - DEP_BRANCH=${DRONE_BRANCH}
    when:
      event: tag
      ref: refs/tags/v*

{% if cookiecutter.repo != "mfcom" %}
  integration_tests_integration:
    <<: *integration_tests_common
    image: centos:${OS_VERSION}
    environment:
      - DEP_BRANCH=integration
    when:
      event: [push, pull_request]
      branch: [ integration, ci_*, pci_* ]
  integration_tests:
    <<: *integration_tests_common
    image: centos:${OS_VERSION}
    environment:
      - DEP_BRANCH=${DRONE_BRANCH}
    when:
{% if cookiecutter.repo == "mfext" or cookiecutter.repo == "mfextaddon_scientific" %}
      event: push
{% else %}
      event: [push, pull_request]
{% endif %}
      branch: [  master, release_*, experimental* ]
{% endif %}

  publish_ci_integration:
    <<: *publish_ci_common
    image: metwork/{{BUILD_IMAGE_NAME}}:integration
    when:
      event: push
      branch: [ integration, pci_* ]
  publish_ci:
    <<: *publish_ci_common
    image: metwork/{{BUILD_IMAGE_NAME}}:${DRONE_BRANCH}
    when:
      event: push
      branch: [ master, experimental*, release_* ]
  publish_tag:
    image: metwork/mfxxx-${OS_VERSION}-buildimage:${DRONE_BRANCH}
    volumes:
      - /pub:/pub
      - /private:/private
    commands:
      - if test "$${FORCED_OS_VERSION}" != ""; then if test "$${FORCED_OS_VERSION}" != "${OS_VERSION}"; then echo "step bypass"; exit 0; fi; fi
      - mkdir -p {{PUB_ROOT}}/releases/rpms/${DRONE_BRANCH}/${OS_VERSION}/
      - cp *.rpm {{PUB_ROOT}}/releases/rpms/${DRONE_BRANCH}/${OS_VERSION}/
      - createrepo --update {{PUB_ROOT}}/releases/rpms/${DRONE_BRANCH}/${OS_VERSION}
      - if test "${OS_VERSION}" = "centos6"; then rm -Rf {{PUB_ROOT}}/releases/docs/${DRONE_BRANCH}/{{cookiecutter.repo}}; mkdir -p {{PUB_ROOT}}/releases/docs/${DRONE_BRANCH}/{{cookiecutter.repo}} ; cp -Rf html_doc/* {{PUB_ROOT}}/releases/docs/${DRONE_BRANCH}/{{cookiecutter.repo}}/ ; fi
    when:
      event: tag
      ref: refs/tags/v*

{% if cookiecutter.repo == "mfcom" %}
  trigger_mfxxxbuildimage:
    image: metwork/drone-downstream-specific-image:latest
    secrets: [ downstream_server, downstream_token ]
    repositories:
      - metwork-framework/docker-mfxxx-${OS_VERSION}-buildimage@${DRONE_BRANCH}
    when:
      status: success
      event: push
      branch: [ master, integration, experimental*, release_* ]
{% endif %}
{% if cookiecutter.repo == "mfext" %}
  trigger_mfcombuildimage:
    image: metwork/drone-downstream-specific-image:latest
    repositories:
      - metwork-framework/docker-mfcom-${OS_VERSION}-buildimage@${DRONE_BRANCH}
    secrets: [ downstream_token, downstream_server ]
    when:
      status: [ success ]
      event: push
      branch: [ master, integration, experimental*, release_* ]
{% endif %}
{% if cookiecutter.repo == "mfserv" %}
  trigger_plugins_buildimage:
    image: metwork/drone-downstream-specific-image:latest
    repositories:
      - metwork-framework/docker-mfservplugins-centos7-buildimage@${DRONE_BRANCH}
    secrets: [ downstream_token, downstream_server ]
    when:
      status: [ success ]
      event: push
      branch: [ master, integration, experimental*, release_* ]
      matrix:
        OS_VERSION: centos7
{% endif %}

matrix:
  OS_VERSION:
{%- if cookiecutter.repo != "mfextaddon_python3_ia" %}
    - centos6
{%- endif %}
    - centos7

branches: [ master, integration, experimental*, ci_*, pci_*, release_* ]
